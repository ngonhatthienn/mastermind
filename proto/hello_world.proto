syntax = "proto3";

package helloworld;

option go_package= "./proto";

import "google/api/annotations.proto";

// Here is the overall greeting service definition where we define all our endpoints
service Services {
  rpc CreateGame(CreateGameRequest) returns (CreateGameReply) {
    option (google.api.http) = {
      post: "/v1/game/create"
      body: "*"
    };
  }
  rpc ListGame(ListGameRequest) returns (ListGameReply) {
    option (google.api.http) = {
      get: "/v1/game/list"
    };
  }
  rpc GetCurrent(CurrentGameRequest) returns (CurrentGameReply) {
    option (google.api.http) = {
      post: "/v1/game/current"
      body: "*"
    };
  }
  rpc PickGame(PickGameRequest) returns (PickGameReply) {
    option (google.api.http) = {
      post: "/v1/game/pick"
      body: "*"
    };
  }
  rpc PlayGame(PlayGameRequest) returns (PlayGameReply) {
    option (google.api.http) = {
      post: "/v1/game/play"
      body: "*"
    };
  }
  rpc UpdateGame(UpdateGameRequest) returns (UpdateGameReply) {
    option (google.api.http) = {
      post: "/v1/game/update"
      body: "*"
    };
  }
  rpc HintGame(HintGameRequest) returns (HintGameReply) {
    option (google.api.http) = {
      post: "/v1/game/hint"
      body: "*"
    };
  }
  rpc CreateUser(CreateUserRequest) returns (CreateUserReply) {
    option (google.api.http) = {
      post: "/v1/user/create"
      body: "*"
    };
  }
  rpc GetListUser(ListUserRequest) returns (ListUserReply) {
    option (google.api.http) = {
      get: "/v1/user/list"
    };
  }
  rpc GetLeaderBoard(LeaderBoardRequest) returns (LeaderBoardReply) {
    option (google.api.http) = {
      post: "/v1/leaderboard/list"
      body: "*"
    };
  }
}

//  CREATEGAME
message Game {
  int32 _id = 1;
  // string game = 2;
  int32 guessLimit = 3;
}
message CreateGameRequest {
  int32 guessLimit = 1;
}
message CreateGameReply {
  int32 code = 1;
  string message = 2;
}

// LISTGAME
message ListGameRequest {
  string name = 1;
}
// The response message containing the greetings
message ListGameReply {
  int32 code = 1;
  string message = 2;
  int32 Length = 3;
  repeated Game games = 4;
}

// GETCURRENT
message GameReply {
  int32 _id = 1;
  int32 guessLimit = 3;
}
message CurrentGameRequest {
  int32 idUser = 1;
}
// The response message containing the greetings
message CurrentGameReply {
  int32 code = 1;
  string message = 2;
  GameReply game = 3;
}

// PLAYGAME
message ListHistory {
  string userRequest = 1;
	int32 rightNumber = 2;
	int32 rightPosition = 3;
}
message PlayGameRequest {
  int32 idUser = 1;
  string userGuess = 2;
}

// The response message containing the greetings
message PlayGameReply {
  int32 code = 1;
  string message = 2;
  int32 guessesLeft = 3;
  repeated ListHistory Result = 6;
}
// UPDATE
message UpdateGameRequest {
  int32 guessLimit = 1;

}
// The response message containing the greetings
message UpdateGameReply {
  string message = 1;
}


// HINTGAME
message HintGameRequest {
  int32 idUser = 1;
  string type = 2;
}
// The response message containing the greetings
message HintGameReply {
  int32 code = 1;
  string message = 2;
  string gameHint = 3;
}

// PICKGAME
message PickGameRequest{
  int32 idUser = 1;
  int32 idGame = 2;

}
message PickGameReply{
  int32 code = 1;
  string message = 2;
  GameReply game = 3;
}
// USER

message CreateUserRequest {
  string name = 1;
  string password = 2;
}
message CreateUserReply {
  int32 _id = 1;
  string message = 2;
}

message ListUserRequest{
}
message User {
  int32 _id = 1;
  string name = 2;
  int32 id_game = 3;//we forget to change password here
}
message ListUserReply{
  int32 length = 1;
  repeated User users = 2;
}

// LeaderBoard
message LeaderBoardData {
  int32 UserId = 1;
  string Score = 2;
}

message LeaderBoardRequest {
  int32 idGame = 1;
  int64 size = 2;

}
message LeaderBoardReply{
  int32 code = 1;
  string message = 2;
  repeated LeaderBoardData data = 3;
}