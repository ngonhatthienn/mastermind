syntax = "proto3";

package gameservice;

option go_package= "./proto";

import "google/api/annotations.proto";

// Here is the overall greeting service definition where we define all our endpoints
service Services {
  rpc CreateGame(CreateGameRequest) returns (CreateGameReply) {
    option (google.api.http) = {
      post: "/v1/game/create"
      body: "*"
    };
  }
  rpc ListGame(ListGameRequest) returns (ListGameReply) {
    option (google.api.http) = {
      get: "/v1/game/list"
    };
  }
  rpc GetCurrent(CurrentGameRequest) returns (CurrentGameReply) {
    option (google.api.http) = {
      post: "/v1/game/current"
      body: "*"
    };
  }
  rpc PickGame(PickGameRequest) returns (PickGameReply) {
    option (google.api.http) = {
      post: "/v1/game/pick"
      body: "*"
    };
  }
  rpc PlayGame(PlayGameRequest) returns (PlayGameReply) {
    option (google.api.http) = {
      post: "/v1/game/play"
      body: "*"
    };
  }
  rpc UpdateGame(UpdateGameRequest) returns (UpdateGameReply) {
    option (google.api.http) = {
      get: "/v1/game/update"
    };
  }
  rpc HintGame(HintGameRequest) returns (HintGameReply) {
    option (google.api.http) = {
      post: "/v1/game/hint"
      body: "*"
    };
  }
  rpc CreateUser(CreateUserRequest) returns (CreateUserReply) {
    option (google.api.http) = {
      post: "/v1/user/create"
      body: "*"
    };
  }
  rpc GetListUser(ListUserRequest) returns (ListUserReply) {
    option (google.api.http) = {
      get: "/v1/user/list"
    };
  }
  rpc GetLeaderBoard(LeaderBoardRequest) returns (LeaderBoardReply) {
    option (google.api.http) = {
      post: "/v1/leaderboard/list"
      body: "*"
    };
  }
  rpc LogIn(LogInRequest) returns (LogInReply) {
    option (google.api.http) = {
      post: "/v1/user/login"
      body: "*"
    };
  }
}
// INIT GAMES IN MONGODB
message InitGameRequest {
  int32 guessLimit = 1;
}
message InitGameReply {
  int32 code = 1;
  string message = 2;
}
//  CREATEGAME
message Game {
  int32 _id = 1;
  int32 guessLimit = 2;
  string game = 3;
}
message CreateGameRequest {
  int32 guessLimit = 1;
}
message CreateGameReply {
  int32 code = 1;
  string message = 2;
}

// LISTGAME
message ListGameRequest {
  string name = 1;
}
message ListGameReply {
  int32 code = 1;
  string message = 2;
  int32 Length = 3;
  repeated Game games = 4;
}

// GETCURRENT
message GameReply {
  int32 _id = 1;
  int32 guessLimit = 3;
}
message CurrentGameRequest {
}
// The response message containing the greetings
message CurrentGameReply {
  int32 code = 1;
  string message = 2;
  GameReply game = 3;
}

// PLAYGAME
message ListHistory {
  string userRequest = 1;
	int32 rightNumber = 2;
	int32 rightPosition = 3;
}
message PlayGameRequest {
  string userGuess = 2;
}

// The response message containing the greetings
message PlayGameReply {
  int32 code = 1;
  string message = 2;
  int32 guessesLeft = 3;
  repeated ListHistory result = 6;
}
// UPDATE
message UpdateGameRequest {

}
// The response message containing the greetings
message UpdateGameReply {
  int32 code = 1;
  string message = 2;
}


// HINTGAME
message HintGameRequest {
  string type = 1;
}
message HintGameReply {
  int32 code = 1;
  string message = 2;
  string gameHint = 3;
}

// PICKGAME
message PickGameRequest{
  int32 idGame = 2;

}
message PickGameReply{
  int32 code = 1;
  string message = 2;
  GameReply game = 3;
}
// USER
message User {
  int32 _id = 1;
  string username = 2;
  string email = 3;
  string password = 4;
  string role = 5;
}
message CreateUserRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  string role = 4;
}
message CreateUserReply {
  int32 _id = 1;
  string message = 2;
}

message ListUserRequest{
}

message ListUserReply{
  int32 code = 1;
  string message = 2;
  int32 length = 3;
  repeated User users = 4;
}

// LeaderBoard
message LeaderBoard {
  int32 userId = 1;
  string score = 2;
}

message LeaderBoardRequest {
  int32 idGame = 1;
  int64 size = 3;
}
message LeaderBoardReply{
  int32 code = 1;
  string message = 2;
  repeated LeaderBoard ranks = 3;
  int32 userRank = 4 ;
  string userScore = 5;
}

// LogIn
message LogInRequest{
  string username = 1;
  string password = 2;
}
message LogInReply{
  int32 code = 1;
  string message = 2;
  string token = 3;
}